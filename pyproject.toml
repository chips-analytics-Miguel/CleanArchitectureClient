[tool.poetry]
name = "microservice-boilerplate"
version = "0.1.0"
description = "Starter project for implementing microservices"
authors = ["Guillaume Mpouli <guillaume.mpouli@chips-analytics.com>"]
maintainers = ["Guillaume Mpouli <guillaume.mpouli@chips-analytics.com>"]
license = "MIT"
readme = "README.md"
packages = [ { include = "src" }, ]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.85.0"
uvicorn = {extras = ["standard"], version = "^0.18.3"}
prometheus-fastapi-instrumentator = "^5.9.1"
opentelemetry-instrumentation-fastapi = "^0.34b0"
opentelemetry-exporter-otlp = "^1.13.0"
loguru = "^0.6.0"
ujson = "^5.5.0"
fhir-resources = "7.0.2"
pymongo = "^4.4.1"
pybreaker = "^1.0.2"
circuitbreaker = "^2.0.0"
confluent-kafka = "^2.2.0"
celery = "^5.3.1"
redis = "^4.6.0"
flower = "^2.0.0"
phonenumbers = "8.12.57"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
coverage = "^6.4.4"
httpx = "^0.23.0"
wemake-python-styleguide = "^0.17.0"
black = "^22.8.0"
mypy = "^0.981"
autoflake = "^1.6.1"
yesqa = "^1.4.0"
pre-commit = "^2.20.0"

[tool.poetry.scripts]
start = "src.__main__:main"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["src",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
testpaths = [
    "tests"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
